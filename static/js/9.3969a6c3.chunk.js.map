{"version":3,"sources":["nft/components/profile/list/NFTListingsGrid.tsx","nft/components/profile/list/ListPage.css.ts","nft/components/profile/list/SetDurationModal.tsx","nft/components/profile/list/SelectMarketplacesDropdown.tsx","nft/components/profile/list/ListPage.tsx","nft/pages/profile/profile.tsx","nft/pages/profile/profile.css.ts"],"names":["SetPriceMethod","WarningType","NFTListingsGrid","selectedMarkets","sellAssets","useSellAsset","state","useState","globalPriceMethod","setGlobalPriceMethod","globalPrice","setGlobalPrice","priceDropdownOptions","useMemo","displayText","onClick","SAME_PRICE","FLOOR_PRICE","PREV_LISTING","marginTop","marginLeft","length","transition","className","bodySmall","color","flex","sm","md","subheadSmall","SortDropdown","dropDownOptions","mini","miniPrompt","display","textAlign","style","map","asset","indexOf","PriceTextInput","listPrice","setListPrice","isGlobalPrice","setGlobalOverride","globalOverride","warning","focused","setFocused","NONE","warningType","setWarningType","removeMarketplaceWarning","removeSellAsset","inputRef","useRef","useEffect","current","value","undefined","floorPrice","BELOW_FLOOR","floor_sell_order_price","ALREADY_LISTED","gap","position","height","width","padding","borderRadius","borderWidth","borderStyle","borderColor","as","pattern","body","placeholder","default","marginRight","backgroundColor","onFocus","onBlur","ref","onChange","v","currentTarget","includes","parseFloat","val","isNaN","Box","cursor","top","badge","lastPrice","formatEth","message","EthPriceDisplay","ethPrice","ethConversion","setEthConversion","fetchPrice","then","price","justifyContent","formatUsdPrice","Duration","ErrorState","MarketplaceRow","removeMarket","showMarketplaceLogo","showGlobalPrice","setAssetListPrice","removeAssetMarketplace","hovered","setHovered","handleHover","marketplaceFee","markets","max","forEach","market","fee","maxMarketFee","royalties","name","LOOKS_RARE_CREATOR_BASIS_POINTS","basisPoints","feeInEth","userReceives","marketplace","listingWarnings","listingWarning","onMouseEnter","onMouseLeave","e","stopPropagation","visibility","src","alt","objectFit","icon","toFixed","NFTListRow","expandMarketplaceRows","setExpandMarketplaceRows","removeAsset","localMarkets","setLocalMarkets","JSON","parse","stringify","marginBottom","flexWrap","minWidth","maxWidth","opacity","imageUrl","paddingRight","overflow","textOverflow","whiteSpace","tokenId","collection","collectionIsVerified","index","splice","MarketplaceRowWrapper","styled","Row","theme","backgroundInteractive","MarketplaceDropdownIcon","img","FeeText","div","textSecondary","HeaderButtonWrap","backgroundModule","SMALL_MEDIA_BREAKPOINT","HeaderButtonContentWrapper","MarketIcon","totalSelected","Chevron","ChevronUpIcon","textPrimary","duration","fast","isOpen","ModalWrapper","DropdownWrapper","Column","Z_INDEX","modalBackdrop","SelectMarketplacesDropdown","setSelectedMarkets","useReducer","s","toggleIsOpen","dropdownDisplayText","useOnClickOutside","buttonTextMedium","secondaryColor","themeVars","colors","ListingMarkets","isSelected","toggleHovered","toggleSelected","filter","selected","BodyPrimary","caption","Checkbox","checked","preventDefault","InputWrapper","isInvalid","accentCritical","backgroundOutline","ThemedText","ErrorMessage","WarningIcon","AlertTriangle","SetDurationModal","day","setDuration","displayDuration","setDisplayDuration","amount","setAmount","valid","errorState","setErrorState","setGlobalExpiration","selectDuration","durationOptions","hour","week","month","expiration","convertDurationToExpiration","Date","now","empty","overMax","type","event","target","flexShrink","pluralize","left","Math","round","durationFactor","MarketWrap","section","ListingHeader","GridWrapper","MobileListButtonWrapper","ListPage","setSellPageState","useProfilePageState","setProfilePageState","setGlobalMarketplaces","toggleBag","useBag","listings","useNFTList","collectionsRequiringApproval","listingStatus","setListingStatus","isMobile","useIsMobile","getListingState","allListingsApproved","ListingStatus","APPROVED","anyPaused","anyActiveFailures","anyActiveSigning","anyActiveRejections","PAUSED","SIGNING","allListingsPending","allCollectionsPending","allListingsDefined","PENDING","FAILED","CONTINUE","fill","ProfilePageStateType","VIEWING","headlineSmall","headlineLarge","ListingButton","buttonText","ProfileContent","sellPageState","removeAllMarketplaceWarnings","resetSellAssets","reset","clearCollectionFilters","useWalletCollections","DEFINED","account","useWeb3React","accountRef","toggleWalletModal","useToggleWalletModal","cartExpanded","bagExpanded","page","PageName","NFT_PROFILE_PAGE","shouldLogImpression","ProfilePage","minHeight","flexDirection","headlineMedium","buttonMedium","Profile","fallback","ProfilePageLoadingSkeleton"],"mappings":"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","file":"static/js/9.3969a6c3.chunk.js","sourcesContent":["import { Box } from 'nft/components/Box'\r\nimport { SortDropdown } from 'nft/components/common/SortDropdown'\r\nimport { Column, Row } from 'nft/components/Flex'\r\nimport { AttachPriceIcon, EditPriceIcon, RowsCollpsedIcon, RowsExpandedIcon, VerifiedIcon } from 'nft/components/icons'\r\nimport { NumericInput } from 'nft/components/layout/Input'\r\nimport { badge, body, bodySmall, subheadSmall } from 'nft/css/common.css'\r\nimport { useSellAsset } from 'nft/hooks'\r\nimport { DropDownOption, ListingMarket, ListingWarning, WalletAsset } from 'nft/types'\r\nimport { LOOKS_RARE_CREATOR_BASIS_POINTS } from 'nft/utils'\r\nimport { formatEth, formatUsdPrice } from 'nft/utils/currency'\r\nimport { fetchPrice } from 'nft/utils/fetchPrice'\r\nimport { Dispatch, FormEvent, useEffect, useMemo, useRef, useState } from 'react'\r\n\r\nimport * as styles from './ListPage.css'\r\n\r\nenum SetPriceMethod {\r\n  SAME_PRICE,\r\n  FLOOR_PRICE,\r\n  PREV_LISTING,\r\n}\r\n\r\nexport const NFTListingsGrid = ({ selectedMarkets }: { selectedMarkets: ListingMarket[] }) => {\r\n  const sellAssets = useSellAsset((state) => state.sellAssets)\r\n  const [globalPriceMethod, setGlobalPriceMethod] = useState<SetPriceMethod>()\r\n  const [globalPrice, setGlobalPrice] = useState<number>()\r\n\r\n  const priceDropdownOptions: DropDownOption[] = useMemo(\r\n    () => [\r\n      {\r\n        displayText: 'Same price',\r\n        onClick: () => setGlobalPriceMethod(SetPriceMethod.SAME_PRICE),\r\n      },\r\n      {\r\n        displayText: 'Floor price',\r\n        onClick: () => setGlobalPriceMethod(SetPriceMethod.FLOOR_PRICE),\r\n      },\r\n      {\r\n        displayText: 'Prev. listing',\r\n        onClick: () => setGlobalPriceMethod(SetPriceMethod.PREV_LISTING),\r\n      },\r\n    ],\r\n    []\r\n  )\r\n\r\n  return (\r\n    <Column>\r\n      <Row marginTop=\"20\">\r\n        <Column\r\n          marginLeft={selectedMarkets.length > 1 ? '36' : '0'}\r\n          transition=\"500\"\r\n          className={bodySmall}\r\n          color=\"textSecondary\"\r\n          flex=\"2\"\r\n        >\r\n          NFT\r\n        </Column>\r\n        <Row flex={{ sm: '1.5', md: '3' }}>\r\n          <Column className={subheadSmall} flex=\"1.5\">\r\n            <SortDropdown dropDownOptions={priceDropdownOptions} mini miniPrompt=\"Set price by\" />\r\n          </Column>\r\n          <Column\r\n            className={bodySmall}\r\n            color=\"textSecondary\"\r\n            flex=\"1\"\r\n            display={{ sm: 'none', md: 'flex' }}\r\n            textAlign=\"right\"\r\n          >\r\n            Marketplace fee\r\n          </Column>\r\n          <Column\r\n            className={bodySmall}\r\n            color=\"textSecondary\"\r\n            flex=\"1\"\r\n            display={{ sm: 'none', md: 'flex' }}\r\n            textAlign=\"right\"\r\n          >\r\n            Royalties\r\n          </Column>\r\n          <Column\r\n            className={bodySmall}\r\n            color=\"textSecondary\"\r\n            style={{ flex: '1.5' }}\r\n            display={{ sm: 'none', md: 'flex' }}\r\n            textAlign=\"right\"\r\n          >\r\n            You receive\r\n          </Column>\r\n        </Row>\r\n      </Row>\r\n      {sellAssets.map((asset) => {\r\n        return (\r\n          <>\r\n            <NFTListRow\r\n              asset={asset}\r\n              globalPriceMethod={globalPriceMethod}\r\n              globalPrice={globalPrice}\r\n              setGlobalPrice={setGlobalPrice}\r\n              selectedMarkets={selectedMarkets}\r\n            />\r\n            {sellAssets.indexOf(asset) < sellAssets.length - 1 && <hr className={styles.nftDivider} />}\r\n          </>\r\n        )\r\n      })}\r\n    </Column>\r\n  )\r\n}\r\n\r\nenum WarningType {\r\n  BELOW_FLOOR = 'LISTING BELOW FLOOR ',\r\n  ALREADY_LISTED = 'ALREADY LISTED FOR ',\r\n  NONE = '',\r\n}\r\n\r\ninterface PriceTextInputProps {\r\n  listPrice?: number\r\n  setListPrice: Dispatch<number | undefined>\r\n  isGlobalPrice: boolean\r\n  setGlobalOverride: Dispatch<boolean>\r\n  globalOverride: boolean\r\n  warning?: ListingWarning\r\n  asset: WalletAsset\r\n}\r\n\r\nconst PriceTextInput = ({\r\n  listPrice,\r\n  setListPrice,\r\n  isGlobalPrice,\r\n  setGlobalOverride,\r\n  globalOverride,\r\n  warning,\r\n  asset,\r\n}: PriceTextInputProps) => {\r\n  const [focused, setFocused] = useState(false)\r\n  const [warningType, setWarningType] = useState(WarningType.NONE)\r\n  const removeMarketplaceWarning = useSellAsset((state) => state.removeMarketplaceWarning)\r\n  const removeSellAsset = useSellAsset((state) => state.removeSellAsset)\r\n  const inputRef = useRef() as React.MutableRefObject<HTMLInputElement>\r\n\r\n  useEffect(() => {\r\n    inputRef.current.value = listPrice !== undefined ? `${listPrice}` : ''\r\n    setWarningType(WarningType.NONE)\r\n    if (!warning && listPrice) {\r\n      if (listPrice < asset.floorPrice) setWarningType(WarningType.BELOW_FLOOR)\r\n      else if (asset.floor_sell_order_price && listPrice >= asset.floor_sell_order_price)\r\n        setWarningType(WarningType.ALREADY_LISTED)\r\n    } else if (warning && listPrice && listPrice >= 0) removeMarketplaceWarning(asset, warning)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [listPrice])\r\n\r\n  return (\r\n    <Column gap=\"12\" position=\"relative\">\r\n      <Row\r\n        color=\"textTertiary\"\r\n        height=\"44\"\r\n        width=\"min\"\r\n        padding=\"4\"\r\n        borderRadius=\"8\"\r\n        borderWidth=\"1px\"\r\n        borderStyle=\"solid\"\r\n        borderColor={\r\n          warningType !== WarningType.NONE && !focused\r\n            ? 'orange'\r\n            : isGlobalPrice\r\n            ? 'accentAction'\r\n            : listPrice != null\r\n            ? 'textSecondary'\r\n            : 'blue400'\r\n        }\r\n      >\r\n        <NumericInput\r\n          as=\"input\"\r\n          pattern=\"[0-9]\"\r\n          borderStyle=\"none\"\r\n          className={body}\r\n          color={{ placeholder: 'textSecondary', default: 'textPrimary' }}\r\n          placeholder=\"0\"\r\n          marginRight=\"0\"\r\n          marginLeft=\"14\"\r\n          backgroundColor=\"none\"\r\n          style={{ width: '68px' }}\r\n          onFocus={() => setFocused(true)}\r\n          onBlur={() => {\r\n            setFocused(false)\r\n          }}\r\n          ref={inputRef}\r\n          onChange={(v: FormEvent<HTMLInputElement>) => {\r\n            if (!listPrice && v.currentTarget.value.includes('.') && parseFloat(v.currentTarget.value) === 0) {\r\n              return\r\n            }\r\n            const val = parseFloat(v.currentTarget.value)\r\n            setListPrice(isNaN(val) ? undefined : val)\r\n          }}\r\n        />\r\n        <Box color={listPrice && listPrice >= 0 ? 'textPrimary' : 'textSecondary'} marginRight=\"16\">\r\n          &nbsp;ETH\r\n        </Box>\r\n        <Box\r\n          cursor=\"pointer\"\r\n          display={isGlobalPrice || globalOverride ? 'block' : 'none'}\r\n          position=\"absolute\"\r\n          style={{ marginTop: '-36px', marginLeft: '124px' }}\r\n          backgroundColor=\"backgroundSurface\"\r\n          onClick={() => setGlobalOverride(!globalOverride)}\r\n        >\r\n          {globalOverride ? <AttachPriceIcon /> : <EditPriceIcon />}\r\n        </Box>\r\n      </Row>\r\n      <Row\r\n        top=\"52\"\r\n        width=\"max\"\r\n        className={badge}\r\n        color={warningType === WarningType.BELOW_FLOOR && !focused ? 'orange' : 'textSecondary'}\r\n        position=\"absolute\"\r\n      >\r\n        {focused ? (\r\n          <>\r\n            <Row display={asset.lastPrice ? 'flex' : 'none'} marginRight=\"8\">\r\n              LAST: {formatEth(asset.lastPrice)} ETH\r\n            </Row>\r\n            <Row display={asset.floorPrice ? 'flex' : 'none'}>FLOOR: {formatEth(asset.floorPrice)} ETH</Row>\r\n          </>\r\n        ) : (\r\n          <>\r\n            {warning\r\n              ? warning.message\r\n              : warningType !== WarningType.NONE && (\r\n                  <>\r\n                    {warningType}\r\n                    {warningType === WarningType.BELOW_FLOOR\r\n                      ? formatEth(asset.floorPrice)\r\n                      : formatEth(asset.floor_sell_order_price)}\r\n                    ETH\r\n                    <Box\r\n                      color={warningType === WarningType.BELOW_FLOOR ? 'accentAction' : 'orange'}\r\n                      marginLeft=\"8\"\r\n                      cursor=\"pointer\"\r\n                      onClick={() => {\r\n                        warningType === WarningType.ALREADY_LISTED && removeSellAsset(asset)\r\n                        setWarningType(WarningType.NONE)\r\n                      }}\r\n                    >\r\n                      {warningType === WarningType.BELOW_FLOOR ? 'DISMISS' : 'REMOVE ITEM'}\r\n                    </Box>\r\n                  </>\r\n                )}\r\n          </>\r\n        )}\r\n      </Row>\r\n    </Column>\r\n  )\r\n}\r\n\r\nconst EthPriceDisplay = ({ ethPrice = 0 }: { ethPrice?: number }) => {\r\n  const [ethConversion, setEthConversion] = useState(3000)\r\n  useEffect(() => {\r\n    fetchPrice().then((price) => {\r\n      setEthConversion(price ?? 0)\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <Column width=\"full\">\r\n      <Row width=\"full\" justifyContent=\"flex-end\">\r\n        {ethPrice !== 0 ? (\r\n          <>\r\n            <Column>\r\n              <Box className={body} color=\"textPrimary\" marginLeft=\"12\" marginRight=\"0\">\r\n                {ethPrice} ETH\r\n              </Box>\r\n              <Box className={body} color=\"textSecondary\" marginLeft=\"12\" marginRight=\"0\">\r\n                {formatUsdPrice(ethPrice * ethConversion)}\r\n              </Box>\r\n            </Column>\r\n          </>\r\n        ) : (\r\n          '- ETH'\r\n        )}\r\n      </Row>\r\n    </Column>\r\n  )\r\n}\r\n\r\nfunction maxMarketFee(markets: ListingMarket[]): number {\r\n  let max = -1\r\n  markets.forEach((market) => {\r\n    if (market.fee > max) {\r\n      max = market.fee\r\n    }\r\n  })\r\n  return max\r\n}\r\n\r\ninterface MarketplaceRowProps {\r\n  globalPriceMethod?: SetPriceMethod\r\n  globalPrice?: number\r\n  setGlobalPrice: Dispatch<number | undefined>\r\n  selectedMarkets: ListingMarket[]\r\n  removeMarket?: () => void\r\n  asset: WalletAsset\r\n  showMarketplaceLogo: boolean\r\n}\r\n\r\nconst MarketplaceRow = ({\r\n  globalPriceMethod,\r\n  globalPrice,\r\n  setGlobalPrice,\r\n  selectedMarkets,\r\n  removeMarket = undefined,\r\n  asset,\r\n  showMarketplaceLogo,\r\n}: MarketplaceRowProps) => {\r\n  const [listPrice, setListPrice] = useState<number>()\r\n  const [globalOverride, setGlobalOverride] = useState(false)\r\n  const showGlobalPrice = globalPriceMethod === SetPriceMethod.SAME_PRICE && !globalOverride && globalPrice\r\n  const setAssetListPrice = useSellAsset((state) => state.setAssetListPrice)\r\n  const removeAssetMarketplace = useSellAsset((state) => state.removeAssetMarketplace)\r\n  const [hovered, setHovered] = useState(false)\r\n  const handleHover = () => setHovered(!hovered)\r\n\r\n  const marketplaceFee = selectedMarkets.length > 0 ? maxMarketFee(selectedMarkets) : 0\r\n  const price = showGlobalPrice ? globalPrice : listPrice\r\n  // LooksRare is a unique case where royalties for creators are a flat 0.5% or 50 basis points\r\n  const royalties =\r\n    (selectedMarkets.length === 1 && selectedMarkets[0].name === 'LooksRare'\r\n      ? LOOKS_RARE_CREATOR_BASIS_POINTS\r\n      : asset.basisPoints) * 0.01\r\n  const feeInEth = price && (price * (royalties + marketplaceFee)) / 100\r\n  const userReceives = price && feeInEth && price - feeInEth\r\n\r\n  useEffect(() => {\r\n    if (globalPriceMethod === SetPriceMethod.FLOOR_PRICE) {\r\n      setListPrice(asset.floorPrice)\r\n      setGlobalPrice(asset.floorPrice)\r\n    } else if (globalPriceMethod === SetPriceMethod.PREV_LISTING) {\r\n      setListPrice(asset.lastPrice)\r\n      setGlobalPrice(asset.lastPrice)\r\n    } else if (globalPriceMethod === SetPriceMethod.SAME_PRICE)\r\n      listPrice && !globalPrice ? setGlobalPrice(listPrice) : setListPrice(globalPrice)\r\n\r\n    setGlobalOverride(false)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [globalPriceMethod])\r\n\r\n  useEffect(() => {\r\n    if (selectedMarkets.length)\r\n      for (const marketplace of selectedMarkets) setAssetListPrice(asset, listPrice, marketplace)\r\n    else setAssetListPrice(asset, listPrice)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [listPrice])\r\n\r\n  useEffect(() => {\r\n    let price: number | undefined = undefined\r\n    if (globalOverride) {\r\n      if (!listPrice) setListPrice(globalPrice)\r\n      price = listPrice ? listPrice : globalPrice\r\n    } else {\r\n      price = globalPrice\r\n    }\r\n    if (selectedMarkets.length) for (const marketplace of selectedMarkets) setAssetListPrice(asset, price, marketplace)\r\n    else setAssetListPrice(asset, price)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [globalOverride])\r\n\r\n  useEffect(() => {\r\n    if (globalPriceMethod === SetPriceMethod.SAME_PRICE && !globalOverride) {\r\n      if (selectedMarkets.length)\r\n        for (const marketplace of selectedMarkets) setAssetListPrice(asset, globalPrice, marketplace)\r\n      else setAssetListPrice(asset, globalPrice)\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [globalPrice])\r\n\r\n  let warning: ListingWarning | undefined = undefined\r\n  if (asset.listingWarnings && asset.listingWarnings?.length > 0) {\r\n    if (showMarketplaceLogo) {\r\n      for (const listingWarning of asset.listingWarnings) {\r\n        if (listingWarning.marketplace.name === selectedMarkets[0].name) warning = listingWarning\r\n      }\r\n    } else {\r\n      warning = asset.listingWarnings[0]\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Row transition=\"500\" marginLeft={selectedMarkets.length > 1 ? '20' : '0'}>\r\n      {showMarketplaceLogo && (\r\n        <Column\r\n          position=\"relative\"\r\n          cursor=\"pointer\"\r\n          onMouseEnter={handleHover}\r\n          onMouseLeave={handleHover}\r\n          style={{ marginLeft: '-28px' }}\r\n          onClick={(e) => {\r\n            e.stopPropagation()\r\n            removeAssetMarketplace(asset, selectedMarkets[0])\r\n            removeMarket && removeMarket()\r\n          }}\r\n        >\r\n          <Box className={styles.removeMarketplace} visibility={hovered ? 'visible' : 'hidden'} position=\"absolute\">\r\n            <Box as=\"img\" width=\"32\" src=\"/nft/svgs/minusCircle.svg\" alt=\"Remove item\" />\r\n          </Box>\r\n          <Box\r\n            as=\"img\"\r\n            alt={selectedMarkets[0].name}\r\n            width=\"28\"\r\n            height=\"28\"\r\n            borderRadius=\"4\"\r\n            objectFit=\"cover\"\r\n            src={selectedMarkets[0].icon}\r\n            marginRight=\"16\"\r\n          />\r\n        </Column>\r\n      )}\r\n      <Column style={{ flex: '1.5' }}>\r\n        {globalPriceMethod === SetPriceMethod.SAME_PRICE && !globalOverride ? (\r\n          <PriceTextInput\r\n            listPrice={globalPrice}\r\n            setListPrice={setGlobalPrice}\r\n            isGlobalPrice={true}\r\n            setGlobalOverride={setGlobalOverride}\r\n            globalOverride={globalOverride}\r\n            warning={warning}\r\n            asset={asset}\r\n          />\r\n        ) : (\r\n          <PriceTextInput\r\n            listPrice={listPrice}\r\n            setListPrice={setListPrice}\r\n            isGlobalPrice={false}\r\n            setGlobalOverride={setGlobalOverride}\r\n            globalOverride={globalOverride}\r\n            warning={warning}\r\n            asset={asset}\r\n          />\r\n        )}\r\n      </Column>\r\n      <Row flex=\"1\" display={{ sm: 'none', md: 'flex' }}>\r\n        <Box className={body} color=\"textSecondary\" width=\"full\" textAlign=\"right\">\r\n          {marketplaceFee > 0 ? marketplaceFee + (selectedMarkets.length > 1 ? '% MAX' : '%') : '--%'}\r\n        </Box>\r\n      </Row>\r\n      <Row flex=\"1\" display={{ sm: 'none', md: 'flex' }}>\r\n        <Box className={body} color=\"textSecondary\" width=\"full\" textAlign=\"right\">\r\n          {royalties.toFixed(1)}%\r\n        </Box>\r\n      </Row>\r\n      <Row style={{ flex: '1.5' }} display={{ sm: 'none', md: 'flex' }}>\r\n        <Column width=\"full\">\r\n          <EthPriceDisplay ethPrice={userReceives} />\r\n        </Column>\r\n      </Row>\r\n    </Row>\r\n  )\r\n}\r\n\r\ninterface NFTListRowProps {\r\n  asset: WalletAsset\r\n  globalPriceMethod?: SetPriceMethod\r\n  setGlobalPrice: Dispatch<number | undefined>\r\n  globalPrice?: number\r\n  selectedMarkets: ListingMarket[]\r\n}\r\n\r\nconst NFTListRow = ({ asset, globalPriceMethod, globalPrice, setGlobalPrice, selectedMarkets }: NFTListRowProps) => {\r\n  const [expandMarketplaceRows, setExpandMarketplaceRows] = useState(false)\r\n  const removeAsset = useSellAsset((state) => state.removeSellAsset)\r\n  const [localMarkets, setLocalMarkets] = useState([])\r\n  const [hovered, setHovered] = useState(false)\r\n  const handleHover = () => setHovered(!hovered)\r\n\r\n  useEffect(() => {\r\n    setLocalMarkets(JSON.parse(JSON.stringify(selectedMarkets)))\r\n    selectedMarkets.length < 2 && setExpandMarketplaceRows(false)\r\n  }, [selectedMarkets])\r\n\r\n  return (\r\n    <Row marginTop=\"24\" marginBottom=\"24\">\r\n      <Row flexWrap=\"nowrap\" flex=\"2\" marginTop=\"0\" marginBottom=\"auto\" minWidth=\"0\">\r\n        <Box\r\n          transition=\"500\"\r\n          style={{\r\n            maxWidth: localMarkets.length > 1 ? '28px' : '0',\r\n            opacity: localMarkets.length > 1 ? '1' : '0',\r\n          }}\r\n          cursor=\"pointer\"\r\n          onClick={() => setExpandMarketplaceRows(!expandMarketplaceRows)}\r\n        >\r\n          {expandMarketplaceRows ? <RowsExpandedIcon /> : <RowsCollpsedIcon />}\r\n        </Box>\r\n        <Box\r\n          position=\"relative\"\r\n          cursor=\"pointer\"\r\n          onMouseEnter={handleHover}\r\n          onMouseLeave={handleHover}\r\n          onClick={() => {\r\n            removeAsset(asset)\r\n          }}\r\n        >\r\n          <Box className={styles.removeAsset} visibility={hovered ? 'visible' : 'hidden'} position=\"absolute\">\r\n            <Box as=\"img\" width=\"32\" src=\"/nft/svgs/minusCircle.svg\" alt=\"Remove item\" />\r\n          </Box>\r\n          <Box\r\n            as=\"img\"\r\n            alt={asset.name}\r\n            width=\"48\"\r\n            height=\"48\"\r\n            borderRadius=\"8\"\r\n            marginLeft={localMarkets.length > 1 ? '8' : '0'}\r\n            marginRight=\"8\"\r\n            transition=\"500\"\r\n            src={asset.imageUrl || '/nft/svgs/image-placeholder.svg'}\r\n          />\r\n        </Box>\r\n        <Column gap=\"4\" minWidth=\"0\">\r\n          <Box paddingRight=\"8\" overflow=\"hidden\" textOverflow=\"ellipsis\" whiteSpace=\"nowrap\" className={subheadSmall}>\r\n            {asset.name ? asset.name : `#${asset.tokenId}`}\r\n          </Box>\r\n          <Box paddingRight=\"8\" overflow=\"hidden\" textOverflow=\"ellipsis\" whiteSpace=\"nowrap\" className={bodySmall}>\r\n            {asset.collection?.name}\r\n            {asset.collectionIsVerified && <VerifiedIcon style={{ marginBottom: '-5px' }} />}\r\n          </Box>\r\n        </Column>\r\n      </Row>\r\n      <Column flex={{ sm: '1', md: '3' }} gap=\"24\">\r\n        {expandMarketplaceRows ? (\r\n          localMarkets.map((market, index) => {\r\n            return (\r\n              <MarketplaceRow\r\n                globalPriceMethod={globalPriceMethod}\r\n                globalPrice={globalPrice}\r\n                setGlobalPrice={setGlobalPrice}\r\n                selectedMarkets={[market]}\r\n                removeMarket={() => localMarkets.splice(index, 1)}\r\n                asset={asset}\r\n                showMarketplaceLogo={true}\r\n                key={index}\r\n              />\r\n            )\r\n          })\r\n        ) : (\r\n          <MarketplaceRow\r\n            globalPriceMethod={globalPriceMethod}\r\n            globalPrice={globalPrice}\r\n            setGlobalPrice={setGlobalPrice}\r\n            selectedMarkets={localMarkets}\r\n            asset={asset}\r\n            showMarketplaceLogo={false}\r\n          />\r\n        )}\r\n      </Column>\r\n    </Row>\r\n  )\r\n}\r\n","import \"src/nft/css/sprinkles.css.ts.vanilla.css!=!../../../../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/nft/css/sprinkles.css.ts.vanilla.css\\\",\\\"source\\\":\\\"#\\\"}!../../../../../node_modules/@vanilla-extract/webpack-plugin/extracted/dist/vanilla-extract-webpack-plugin-extracted.cjs.js\"\nimport \"src/nft/components/profile/list/ListPage.css.ts.vanilla.css!=!../../../../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/nft/components/profile/list/ListPage.css.ts.vanilla.css\\\",\\\"source\\\":\\\"Ll8xb2xxcTRuMiB7CiAgdHJhbnNmb3JtOiByb3RhdGUoMTgwZGVnKTsKfQouXzFvbHFxNG4zIHsKICBib3gtc2hhZG93OiAwcHggNHB4IDE2cHggdmFyKC0tZ2VuaWUtY29sb3JzLWJhY2tncm91bmRTdXJmYWNlKTsKICBtYXJnaW4tbGVmdDogLTEycHg7Cn0KLl8xb2xxcTRuNCB7CiAgdG9wOiAzMXB4OwogIGxlZnQ6IDhweDsKfQouXzFvbHFxNG41IHsKICB0b3A6IDExcHg7CiAgcmlnaHQ6IDE0cHg7Cn0=\\\"}!../../../../../node_modules/@vanilla-extract/webpack-plugin/extracted/dist/vanilla-extract-webpack-plugin-extracted.cjs.js\"\nexport var nftDivider = 'rgw6ez167 rgw6ez151 rgw6ez787 rgw6ez7fz rgw6ez76n rgw6ez4xd';\nexport var chevronDown = '_1olqq4n2';\nexport var dropdown = '_1olqq4n3';\nexport var removeAsset = '_1olqq4n4';\nexport var removeMarketplace = '_1olqq4n5';","import ms from 'ms.macro'\r\nimport { SortDropdown } from 'nft/components/common/SortDropdown'\r\nimport { Column, Row } from 'nft/components/Flex'\r\nimport { NumericInput } from 'nft/components/layout/Input'\r\nimport { bodySmall, buttonTextMedium, caption } from 'nft/css/common.css'\r\nimport { useSellAsset } from 'nft/hooks'\r\nimport { DropDownOption } from 'nft/types'\r\nimport { pluralize } from 'nft/utils/roundAndPluralize'\r\nimport { useEffect, useMemo, useState } from 'react'\r\nimport { AlertTriangle } from 'react-feather'\r\nimport styled from 'styled-components/macro'\r\nimport { ThemedText } from 'theme'\r\n\r\nconst ModalWrapper = styled(Column)`\r\n  gap: 4px;\r\n  position: relative;\r\n`\r\n\r\nconst InputWrapper = styled(Row) <{ isInvalid: boolean }>`\r\n  padding: 12px 8px 12px 12px;\r\n  border: 1px solid;\r\n  position: relative;\r\n  height: 44px;\r\n  border-radius: 8px;\r\n  border-color: ${({ isInvalid, theme }) => (isInvalid ? theme.accentCritical : theme.backgroundOutline)};\r\n`\r\n\r\nconst DropdownWrapper = styled(ThemedText.BodyPrimary)`\r\n  cursor: pointer;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  height: min-content;\r\n  width: 80px;\r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.backgroundInteractive};\r\n  }\r\n  border-radius: 12px;\r\n  padding: 8px;\r\n`\r\n\r\nconst ErrorMessage = styled(Row)`\r\n  color: ${({ theme }) => theme.accentCritical};\r\n  gap: 4px;\r\n  position: absolute;\r\n  top: 44px;\r\n`\r\n\r\nconst WarningIcon = styled(AlertTriangle)`\r\n  width: 16px;\r\n  color: ${({ theme }) => theme.accentCritical};\r\n`\r\n\r\nenum Duration {\r\n  hour = 'hour',\r\n  day = 'day',\r\n  week = 'week',\r\n  month = 'month',\r\n}\r\n\r\nenum ErrorState {\r\n  valid,\r\n  empty,\r\n  overMax,\r\n}\r\n\r\nexport const SetDurationModal = () => {\r\n  const [duration, setDuration] = useState(Duration.day)\r\n  const [displayDuration, setDisplayDuration] = useState(Duration.day)\r\n  const [amount, setAmount] = useState(7)\r\n  const [errorState, setErrorState] = useState(ErrorState.valid)\r\n  const setGlobalExpiration = useSellAsset((state) => state.setGlobalExpiration)\r\n  const setCustomExpiration = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setAmount(!!event.target.value.length ? parseFloat(event.target.value) : 0)\r\n    setDuration(displayDuration)\r\n  }\r\n  const selectDuration = (duration: Duration) => {\r\n    setDuration(duration)\r\n    setDisplayDuration(duration)\r\n  }\r\n  const durationOptions: DropDownOption[] = useMemo(\r\n    () => [\r\n      {\r\n        displayText: 'Hours',\r\n        onClick: () => selectDuration(Duration.hour),\r\n      },\r\n      {\r\n        displayText: 'Days',\r\n        onClick: () => selectDuration(Duration.day),\r\n      },\r\n      {\r\n        displayText: 'Weeks',\r\n        onClick: () => selectDuration(Duration.week),\r\n      },\r\n      {\r\n        displayText: 'Months',\r\n        onClick: () => selectDuration(Duration.month),\r\n      },\r\n    ],\r\n    []\r\n  )\r\n  useEffect(() => {\r\n    const expiration = convertDurationToExpiration(amount, duration)\r\n    if (expiration * 1000 - Date.now() < ms`60 seconds`) setErrorState(ErrorState.empty)\r\n    else if (expiration * 1000 - Date.now() > ms`180 days`) setErrorState(ErrorState.overMax)\r\n    else setErrorState(ErrorState.valid)\r\n    setGlobalExpiration(expiration)\r\n  }, [amount, duration, setGlobalExpiration])\r\n\r\n  return (\r\n    <ModalWrapper>\r\n      <InputWrapper isInvalid={errorState !== ErrorState.valid}>\r\n        <NumericInput\r\n          as=\"input\"\r\n          type=\"number\"\r\n          pattern=\"[0-9]\"\r\n          borderStyle=\"none\"\r\n          className={bodySmall}\r\n          color={{ placeholder: 'textSecondary', default: 'textPrimary' }}\r\n          value={amount}\r\n          width=\"32\"\r\n          marginRight=\"4\"\r\n          backgroundColor=\"none\"\r\n          onChange={setCustomExpiration}\r\n          flexShrink=\"0\"\r\n        />\r\n        <DropdownWrapper className={buttonTextMedium}>\r\n          <SortDropdown\r\n            dropDownOptions={durationOptions}\r\n            mini\r\n            miniPrompt={displayDuration + (displayDuration === duration ? pluralize(amount) : 's')}\r\n            left={38}\r\n            top={38}\r\n          />\r\n        </DropdownWrapper>\r\n      </InputWrapper>\r\n      {errorState !== ErrorState.valid && (\r\n        <ErrorMessage className={caption}>\r\n          {' '}\r\n          <WarningIcon /> {errorState === ErrorState.overMax ? 'Maximum 6 months' : 'Set duration'}\r\n        </ErrorMessage>\r\n      )}\r\n    </ModalWrapper>\r\n  )\r\n}\r\n\r\nconst convertDurationToExpiration = (amount: number, duration: Duration) => {\r\n  const durationFactor = () => {\r\n    switch (duration) {\r\n      case Duration.hour:\r\n        return 1\r\n      case Duration.day:\r\n        return 24\r\n      case Duration.week:\r\n        return 24 * 7\r\n      default: // month\r\n        return 24 * 30\r\n    }\r\n  }\r\n  return Math.round((Date.now() + ms`1 hour` * durationFactor() * amount) / 1000)\r\n}\r\n","import { SMALL_MEDIA_BREAKPOINT } from 'components/Tokens/constants'\r\nimport { useOnClickOutside } from 'hooks/useOnClickOutside'\r\nimport { Column, Row } from 'nft/components/Flex'\r\nimport { ChevronUpIcon } from 'nft/components/icons'\r\nimport { Checkbox } from 'nft/components/layout/Checkbox'\r\nimport { buttonTextMedium, caption } from 'nft/css/common.css'\r\nimport { themeVars } from 'nft/css/sprinkles.css'\r\nimport { ListingMarket } from 'nft/types'\r\nimport { ListingMarkets } from 'nft/utils/listNfts'\r\nimport { Dispatch, FormEvent, useMemo, useReducer, useRef } from 'react'\r\nimport styled from 'styled-components/macro'\r\nimport { ThemedText } from 'theme'\r\nimport { Z_INDEX } from 'theme/zIndex'\r\n\r\nconst MarketplaceRowWrapper = styled(Row)`\r\n  gap: 6px;\r\n  height: 44px;\r\n  width: 100%;\r\n  cursor: pointer;\r\n  justify-content: space-between;\r\n  padding: 0px 16px;\r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.backgroundInteractive};\r\n  }\r\n  border-radius: 12px;\r\n`\r\n\r\nconst MarketplaceDropdownIcon = styled.img`\r\n  width: 24px;\r\n  height: 24px;\r\n  border-radius: 4px;\r\n  object-fit: cover;\r\n`\r\n\r\nconst FeeText = styled.div`\r\n  color: ${({ theme }) => theme.textSecondary};\r\n`\r\n\r\ninterface MarketplaceRowProps {\r\n  market: ListingMarket\r\n  setSelectedMarkets: Dispatch<ListingMarket[]>\r\n  selectedMarkets: ListingMarket[]\r\n}\r\n\r\nconst MarketplaceRow = ({ market, setSelectedMarkets, selectedMarkets }: MarketplaceRowProps) => {\r\n  const isSelected = selectedMarkets.includes(market)\r\n  const [hovered, toggleHovered] = useReducer((s) => !s, false)\r\n\r\n  const toggleSelected = () => {\r\n    if (selectedMarkets.length === 1 && isSelected) return\r\n    isSelected\r\n      ? setSelectedMarkets(selectedMarkets.filter((selected: ListingMarket) => selected !== market))\r\n      : setSelectedMarkets([...selectedMarkets, market])\r\n  }\r\n\r\n  const handleCheckbox = (e: FormEvent) => {\r\n    e.preventDefault()\r\n    e.stopPropagation()\r\n  }\r\n  return (\r\n    <MarketplaceRowWrapper onMouseEnter={toggleHovered} onMouseLeave={toggleHovered} onClick={toggleSelected}>\r\n      <Row gap=\"12\" onClick={toggleSelected}>\r\n        <MarketplaceDropdownIcon alt={market.name} src={market.icon} />\r\n        <Column>\r\n          <ThemedText.BodyPrimary>{market.name}</ThemedText.BodyPrimary>\r\n          <FeeText className={caption}>{market.fee}% fee</FeeText>\r\n        </Column>\r\n      </Row>\r\n\r\n      <Checkbox hovered={hovered} checked={isSelected} onClick={handleCheckbox}>\r\n        <span />\r\n      </Checkbox>\r\n    </MarketplaceRowWrapper>\r\n  )\r\n}\r\n\r\nconst HeaderButtonWrap = styled(Row)`\r\n  padding: 12px;\r\n  border-radius: 12px;\r\n  width: 180px;\r\n  justify-content: space-between;\r\n  background: ${({ theme }) => theme.backgroundModule};\r\n  cursor: pointer;\r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.backgroundInteractive};\r\n  }\r\n  @media screen and (min-width: ${SMALL_MEDIA_BREAKPOINT}) {\r\n    width: 220px;\r\n  }\r\n`\r\n\r\nconst HeaderButtonContentWrapper = styled.div`\r\n  display: flex;\r\n`\r\n\r\nconst MarketIcon = styled.img<{ index: number; totalSelected: number }>`\r\n  height: 20px;\r\n  width: 20px;\r\n  margin-right: 8px;\r\n  border: 1px solid;\r\n  border-color: ${({ theme }) => theme.backgroundInteractive};\r\n  border-radius: 4px;\r\n  z-index: ${({ index, totalSelected }) => totalSelected - index};\r\n  margin-left: ${({ index }) => `${index === 0 ? 0 : -18}px`};\r\n`\r\n\r\nconst Chevron = styled(ChevronUpIcon) <{ isOpen: boolean }>`\r\n  height: 20px;\r\n  width: 20px;\r\n  fill: ${({ theme }) => theme.textPrimary};\r\n  transition: ${({\r\n  theme: {\r\n    transition: { duration },\r\n  },\r\n}) => `${duration.fast} transform`};\r\n  transform: ${({ isOpen }) => `rotate(${isOpen ? 0 : 180}deg)`};\r\n`\r\n\r\nconst ModalWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: relative;\r\n`\r\n\r\nconst DropdownWrapper = styled(Column) <{ isOpen: boolean }>`\r\n  padding: 16px 0px;\r\n  background-color: ${({ theme }) => theme.backgroundModule};\r\n  display: ${({ isOpen }) => (isOpen ? 'flex' : 'none')};\r\n  position: absolute;\r\n  top: 52px;\r\n  width: 100%;\r\n  border-radius: 12px;\r\n  gap: 12px;\r\n  z-index: ${Z_INDEX.modalBackdrop};\r\n`\r\n\r\nexport const SelectMarketplacesDropdown = ({\r\n  setSelectedMarkets,\r\n  selectedMarkets,\r\n}: {\r\n  setSelectedMarkets: Dispatch<ListingMarket[]>\r\n  selectedMarkets: ListingMarket[]\r\n}) => {\r\n  const [isOpen, toggleIsOpen] = useReducer((s) => !s, false)\r\n  const dropdownDisplayText = useMemo(\r\n    () => (selectedMarkets.length === 1 ? selectedMarkets[0].name : 'Multiple'),\r\n    [selectedMarkets]\r\n  )\r\n  const ref = useRef<HTMLDivElement>(null)\r\n  useOnClickOutside(ref, () => isOpen && toggleIsOpen())\r\n  return (\r\n    <ModalWrapper ref={ref}>\r\n      <HeaderButtonWrap className={buttonTextMedium} onClick={toggleIsOpen}>\r\n        <HeaderButtonContentWrapper>\r\n          {selectedMarkets.map((market, index) => {\r\n            return (\r\n              <MarketIcon\r\n                key={index}\r\n                alt={market.name}\r\n                src={market.icon}\r\n                totalSelected={selectedMarkets.length}\r\n                index={index}\r\n              />\r\n            )\r\n          })}\r\n          {dropdownDisplayText}\r\n        </HeaderButtonContentWrapper>\r\n\r\n        <Chevron isOpen={isOpen} secondaryColor={themeVars.colors.textPrimary} />\r\n      </HeaderButtonWrap>\r\n      <DropdownWrapper isOpen={isOpen}>\r\n        {ListingMarkets.map((market) => {\r\n          return MarketplaceRow({ market, setSelectedMarkets, selectedMarkets })\r\n        })}\r\n      </DropdownWrapper>\r\n    </ModalWrapper>\r\n  )\r\n}\r\n","import { SMALL_MEDIA_BREAKPOINT } from 'components/Tokens/constants'\r\nimport { ListingButton } from 'nft/components/bag/profile/ListingButton'\r\nimport { getListingState } from 'nft/components/bag/profile/utils'\r\nimport { Column, Row } from 'nft/components/Flex'\r\nimport { BackArrowIcon } from 'nft/components/icons'\r\nimport { headlineLarge, headlineSmall } from 'nft/css/common.css'\r\nimport { themeVars } from 'nft/css/sprinkles.css'\r\nimport { useBag, useIsMobile, useNFTList, useProfilePageState, useSellAsset } from 'nft/hooks'\r\nimport { ListingStatus, ProfilePageStateType } from 'nft/types'\r\nimport { ListingMarkets } from 'nft/utils/listNfts'\r\nimport { useEffect, useState } from 'react'\r\nimport styled from 'styled-components/macro'\r\n\r\nimport { NFTListingsGrid } from './NFTListingsGrid'\r\nimport { SelectMarketplacesDropdown } from './SelectMarketplacesDropdown'\r\nimport { SetDurationModal } from './SetDurationModal'\r\n\r\nconst MarketWrap = styled.section`\r\n  gap: 48px;\r\n  margin: 0px auto;\r\n  padding: 0px 16px;\r\n  max-width: 1200px;\r\n  width: 100%;\r\n\r\n  @media screen and (min-width: ${SMALL_MEDIA_BREAKPOINT}) {\r\n    padding: 0px 44px;\r\n  }\r\n`\r\n\r\nconst ListingHeader = styled(Row)`\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  flex-wrap: wrap;\r\n  margin-top: 18px;\r\n\r\n  @media screen and (min-width: ${SMALL_MEDIA_BREAKPOINT}) {\r\n    margin-top: 40px;\r\n  }\r\n`\r\n\r\nconst GridWrapper = styled.div`\r\n  margin-top: 24px;\r\n\r\n  @media screen and (min-width: ${SMALL_MEDIA_BREAKPOINT}) {\r\n    margin-left: 40px;\r\n  }\r\n`\r\n\r\nconst MobileListButtonWrapper = styled.div`\r\n  display: flex;\r\n  margin: 14px 16px 32px 16px;\r\n\r\n  @media screen and (min-width: ${SMALL_MEDIA_BREAKPOINT}) {\r\n    display: none;\r\n  }\r\n`\r\n\r\nexport const ListPage = () => {\r\n  const { setProfilePageState: setSellPageState } = useProfilePageState()\r\n  const setGlobalMarketplaces = useSellAsset((state) => state.setGlobalMarketplaces)\r\n  const [selectedMarkets, setSelectedMarkets] = useState([ListingMarkets[0]]) // default marketplace: x2y2\r\n  const toggleBag = useBag((s) => s.toggleBag)\r\n  const listings = useNFTList((state) => state.listings)\r\n  const collectionsRequiringApproval = useNFTList((state) => state.collectionsRequiringApproval)\r\n  const listingStatus = useNFTList((state) => state.listingStatus)\r\n  const setListingStatus = useNFTList((state) => state.setListingStatus)\r\n  const isMobile = useIsMobile()\r\n\r\n  useEffect(() => {\r\n    const state = getListingState(collectionsRequiringApproval, listings)\r\n\r\n    if (state.allListingsApproved) setListingStatus(ListingStatus.APPROVED)\r\n    else if (state.anyPaused && !state.anyActiveFailures && !state.anyActiveSigning && !state.anyActiveRejections) {\r\n      setListingStatus(ListingStatus.CONTINUE)\r\n    } else if (state.anyPaused) setListingStatus(ListingStatus.PAUSED)\r\n    else if (state.anyActiveSigning) setListingStatus(ListingStatus.SIGNING)\r\n    else if (state.allListingsPending || (state.allCollectionsPending && state.allListingsDefined))\r\n      setListingStatus(ListingStatus.PENDING)\r\n    else if (state.anyActiveFailures && listingStatus !== ListingStatus.PAUSED) setListingStatus(ListingStatus.FAILED)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [listings, collectionsRequiringApproval])\r\n\r\n  useEffect(() => {\r\n    setGlobalMarketplaces(selectedMarkets)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [selectedMarkets])\r\n\r\n  return (\r\n    <Column>\r\n      <MarketWrap>\r\n        <ListingHeader>\r\n          <Row gap=\"4\" marginBottom={{ sm: '18', md: '0' }}>\r\n            <BackArrowIcon\r\n              height={isMobile ? 20 : 32}\r\n              width={isMobile ? 20 : 32}\r\n              fill={themeVars.colors.textSecondary}\r\n              onClick={() => setSellPageState(ProfilePageStateType.VIEWING)}\r\n              cursor=\"pointer\"\r\n            />\r\n            <div className={isMobile ? headlineSmall : headlineLarge}>Sell NFTs</div>\r\n          </Row>\r\n          <Row gap=\"12\">\r\n            <SelectMarketplacesDropdown setSelectedMarkets={setSelectedMarkets} selectedMarkets={selectedMarkets} />\r\n            <SetDurationModal />\r\n          </Row>\r\n        </ListingHeader>\r\n        <GridWrapper>\r\n          <NFTListingsGrid selectedMarkets={selectedMarkets} />\r\n        </GridWrapper>\r\n      </MarketWrap>\r\n      <MobileListButtonWrapper>\r\n        <ListingButton onClick={toggleBag} buttonText=\"Continue listing\" />\r\n      </MobileListButtonWrapper>\r\n    </Column>\r\n  )\r\n}\r\n","import { Trace } from '@uniswap/analytics'\r\nimport { PageName } from '@uniswap/analytics-events'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Box } from 'nft/components/Box'\r\nimport { Center, Column } from 'nft/components/Flex'\r\nimport { ListPage } from 'nft/components/profile/list/ListPage'\r\nimport { ProfilePage } from 'nft/components/profile/view/ProfilePage'\r\nimport { ProfilePageLoadingSkeleton } from 'nft/components/profile/view/ProfilePageLoadingSkeleton'\r\nimport { buttonMedium, headlineMedium } from 'nft/css/common.css'\r\nimport { useBag, useNFTList, useProfilePageState, useSellAsset, useWalletCollections } from 'nft/hooks'\r\nimport { ListingStatus, ProfilePageStateType } from 'nft/types'\r\nimport { Suspense, useEffect, useRef } from 'react'\r\nimport { useToggleWalletModal } from 'state/application/hooks'\r\n\r\nimport * as styles from './profile.css'\r\n\r\nconst SHOPPING_BAG_WIDTH = 360\r\n\r\nconst ProfileContent = () => {\r\n  const sellPageState = useProfilePageState((state) => state.state)\r\n  const setSellPageState = useProfilePageState((state) => state.setProfilePageState)\r\n  const removeAllMarketplaceWarnings = useSellAsset((state) => state.removeAllMarketplaceWarnings)\r\n  const resetSellAssets = useSellAsset((state) => state.reset)\r\n  const clearCollectionFilters = useWalletCollections((state) => state.clearCollectionFilters)\r\n  const setListingStatus = useNFTList((state) => state.setListingStatus)\r\n\r\n  useEffect(() => {\r\n    removeAllMarketplaceWarnings()\r\n    setListingStatus(ListingStatus.DEFINED)\r\n  }, [removeAllMarketplaceWarnings, sellPageState, setListingStatus])\r\n\r\n  const { account } = useWeb3React()\r\n  const accountRef = useRef(account)\r\n  const toggleWalletModal = useToggleWalletModal()\r\n\r\n  useEffect(() => {\r\n    if (accountRef.current !== account) {\r\n      accountRef.current = account\r\n      resetSellAssets()\r\n      setSellPageState(ProfilePageStateType.VIEWING)\r\n      clearCollectionFilters()\r\n    }\r\n  }, [account, resetSellAssets, setSellPageState, clearCollectionFilters])\r\n  const cartExpanded = useBag((state) => state.bagExpanded)\r\n\r\n  return (\r\n    <Trace page={PageName.NFT_PROFILE_PAGE} shouldLogImpression>\r\n      <Box className={styles.profileWrapper}>\r\n        {/* <Head> TODO: figure out metadata tagging\r\n          <title>Genie | Sell</title>\r\n        </Head> */}\r\n        {!!account ? (\r\n          <Box style={{ width: `calc(100% - ${cartExpanded ? SHOPPING_BAG_WIDTH : 0}px)` }}>\r\n            {sellPageState === ProfilePageStateType.VIEWING ? <ProfilePage /> : <ListPage />}\r\n          </Box>\r\n        ) : (\r\n          <Column as=\"section\" gap=\"60\" className={styles.section}>\r\n            <div style={{ minHeight: '70vh' }}>\r\n              <Center className={styles.notConnected} flexDirection=\"column\">\r\n                <Box as=\"span\" className={headlineMedium} color=\"textSecondary\" marginBottom=\"24\" display=\"block\">\r\n                  No items to display\r\n                </Box>\r\n                <Box as=\"button\" className={buttonMedium} onClick={toggleWalletModal}>\r\n                  Connect Wallet\r\n                </Box>\r\n              </Center>\r\n            </div>\r\n          </Column>\r\n        )}\r\n      </Box>\r\n    </Trace>\r\n  )\r\n}\r\n\r\nconst Profile = () => {\r\n  return (\r\n    <Suspense fallback={<ProfilePageLoadingSkeleton />}>\r\n      <ProfileContent />\r\n    </Suspense>\r\n  )\r\n}\r\n\r\nexport default Profile\r\n","import \"src/nft/css/sprinkles.css.ts.vanilla.css!=!../../../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/nft/css/sprinkles.css.ts.vanilla.css\\\",\\\"source\\\":\\\"#\\\"}!../../../../node_modules/@vanilla-extract/webpack-plugin/extracted/dist/vanilla-extract-webpack-plugin-extracted.cjs.js\"\nimport \"src/nft/pages/profile/profile.css.ts.vanilla.css!=!../../../../node_modules/@vanilla-extract/webpack-plugin/virtualFileLoader/dist/vanilla-extract-webpack-plugin-virtualFileLoader.cjs.js?{\\\"fileName\\\":\\\"src/nft/pages/profile/profile.css.ts.vanilla.css\\\",\\\"source\\\":\\\"Ll8xdmRmZ3FyMSB7CiAgbWF4LXdpZHRoOiAxMDAwcHg7CiAgbWFyZ2luOiAwIGF1dG87Cn0KLl8xdmRmZ3FyMiB7CiAgaGVpZ2h0OiA3MHZoOwp9Ci5fMXZkZmdxcjQgewogIHNjcm9sbGJhci13aWR0aDogbm9uZTsKfQ==\\\"}!../../../../node_modules/@vanilla-extract/webpack-plugin/extracted/dist/vanilla-extract-webpack-plugin-extracted.cjs.js\"\nexport var section = '_1vdfgqr1 rgw6ez2aj rgw6ez293 rgw6ez2g1 rgw6ez2el';\nexport var notConnected = '_1vdfgqr2';\nexport var profileWrapper = '_1vdfgqr4 rgw6ez1bp rgw6ez1ck rgw6ez151';"],"sourceRoot":""}